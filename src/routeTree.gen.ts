/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ExampleGuitarsIndexRouteImport } from './routes/example.guitars/index'
import { Route as ExampleGuitarsGuitarIdRouteImport } from './routes/example.guitars/$guitarId'
import { ServerRoute as ApiTtsServerRouteImport } from './routes/api.tts'
import { ServerRoute as ApiTranscribeServerRouteImport } from './routes/api.transcribe'
import { ServerRoute as ApiSseServerRouteImport } from './routes/api.sse'
import { ServerRoute as ApiMessagesServerRouteImport } from './routes/api.messages'
import { ServerRoute as ApiItemsServerRouteImport } from './routes/api.items'
import { ServerRoute as ApiInvestmentsServerRouteImport } from './routes/api.investments'
import { ServerRoute as ApiDemoChatServerRouteImport } from './routes/api.demo-chat'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExampleGuitarsIndexRoute = ExampleGuitarsIndexRouteImport.update({
  id: '/example/guitars/',
  path: '/example/guitars/',
  getParentRoute: () => rootRouteImport,
} as any)
const ExampleGuitarsGuitarIdRoute = ExampleGuitarsGuitarIdRouteImport.update({
  id: '/example/guitars/$guitarId',
  path: '/example/guitars/$guitarId',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiTtsServerRoute = ApiTtsServerRouteImport.update({
  id: '/api/tts',
  path: '/api/tts',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiTranscribeServerRoute = ApiTranscribeServerRouteImport.update({
  id: '/api/transcribe',
  path: '/api/transcribe',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiSseServerRoute = ApiSseServerRouteImport.update({
  id: '/api/sse',
  path: '/api/sse',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiMessagesServerRoute = ApiMessagesServerRouteImport.update({
  id: '/api/messages',
  path: '/api/messages',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiItemsServerRoute = ApiItemsServerRouteImport.update({
  id: '/api/items',
  path: '/api/items',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiInvestmentsServerRoute = ApiInvestmentsServerRouteImport.update({
  id: '/api/investments',
  path: '/api/investments',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiDemoChatServerRoute = ApiDemoChatServerRouteImport.update({
  id: '/api/demo-chat',
  path: '/api/demo-chat',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/example/guitars/$guitarId': typeof ExampleGuitarsGuitarIdRoute
  '/example/guitars': typeof ExampleGuitarsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/example/guitars/$guitarId': typeof ExampleGuitarsGuitarIdRoute
  '/example/guitars': typeof ExampleGuitarsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/example/guitars/$guitarId': typeof ExampleGuitarsGuitarIdRoute
  '/example/guitars/': typeof ExampleGuitarsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/example/guitars/$guitarId' | '/example/guitars'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/example/guitars/$guitarId' | '/example/guitars'
  id: '__root__' | '/' | '/example/guitars/$guitarId' | '/example/guitars/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ExampleGuitarsGuitarIdRoute: typeof ExampleGuitarsGuitarIdRoute
  ExampleGuitarsIndexRoute: typeof ExampleGuitarsIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/demo-chat': typeof ApiDemoChatServerRoute
  '/api/investments': typeof ApiInvestmentsServerRoute
  '/api/items': typeof ApiItemsServerRoute
  '/api/messages': typeof ApiMessagesServerRoute
  '/api/sse': typeof ApiSseServerRoute
  '/api/transcribe': typeof ApiTranscribeServerRoute
  '/api/tts': typeof ApiTtsServerRoute
}
export interface FileServerRoutesByTo {
  '/api/demo-chat': typeof ApiDemoChatServerRoute
  '/api/investments': typeof ApiInvestmentsServerRoute
  '/api/items': typeof ApiItemsServerRoute
  '/api/messages': typeof ApiMessagesServerRoute
  '/api/sse': typeof ApiSseServerRoute
  '/api/transcribe': typeof ApiTranscribeServerRoute
  '/api/tts': typeof ApiTtsServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/demo-chat': typeof ApiDemoChatServerRoute
  '/api/investments': typeof ApiInvestmentsServerRoute
  '/api/items': typeof ApiItemsServerRoute
  '/api/messages': typeof ApiMessagesServerRoute
  '/api/sse': typeof ApiSseServerRoute
  '/api/transcribe': typeof ApiTranscribeServerRoute
  '/api/tts': typeof ApiTtsServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/demo-chat'
    | '/api/investments'
    | '/api/items'
    | '/api/messages'
    | '/api/sse'
    | '/api/transcribe'
    | '/api/tts'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/demo-chat'
    | '/api/investments'
    | '/api/items'
    | '/api/messages'
    | '/api/sse'
    | '/api/transcribe'
    | '/api/tts'
  id:
    | '__root__'
    | '/api/demo-chat'
    | '/api/investments'
    | '/api/items'
    | '/api/messages'
    | '/api/sse'
    | '/api/transcribe'
    | '/api/tts'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiDemoChatServerRoute: typeof ApiDemoChatServerRoute
  ApiInvestmentsServerRoute: typeof ApiInvestmentsServerRoute
  ApiItemsServerRoute: typeof ApiItemsServerRoute
  ApiMessagesServerRoute: typeof ApiMessagesServerRoute
  ApiSseServerRoute: typeof ApiSseServerRoute
  ApiTranscribeServerRoute: typeof ApiTranscribeServerRoute
  ApiTtsServerRoute: typeof ApiTtsServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/example/guitars/': {
      id: '/example/guitars/'
      path: '/example/guitars'
      fullPath: '/example/guitars'
      preLoaderRoute: typeof ExampleGuitarsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/example/guitars/$guitarId': {
      id: '/example/guitars/$guitarId'
      path: '/example/guitars/$guitarId'
      fullPath: '/example/guitars/$guitarId'
      preLoaderRoute: typeof ExampleGuitarsGuitarIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/tts': {
      id: '/api/tts'
      path: '/api/tts'
      fullPath: '/api/tts'
      preLoaderRoute: typeof ApiTtsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/transcribe': {
      id: '/api/transcribe'
      path: '/api/transcribe'
      fullPath: '/api/transcribe'
      preLoaderRoute: typeof ApiTranscribeServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/sse': {
      id: '/api/sse'
      path: '/api/sse'
      fullPath: '/api/sse'
      preLoaderRoute: typeof ApiSseServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/messages': {
      id: '/api/messages'
      path: '/api/messages'
      fullPath: '/api/messages'
      preLoaderRoute: typeof ApiMessagesServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/items': {
      id: '/api/items'
      path: '/api/items'
      fullPath: '/api/items'
      preLoaderRoute: typeof ApiItemsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/investments': {
      id: '/api/investments'
      path: '/api/investments'
      fullPath: '/api/investments'
      preLoaderRoute: typeof ApiInvestmentsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/demo-chat': {
      id: '/api/demo-chat'
      path: '/api/demo-chat'
      fullPath: '/api/demo-chat'
      preLoaderRoute: typeof ApiDemoChatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ExampleGuitarsGuitarIdRoute: ExampleGuitarsGuitarIdRoute,
  ExampleGuitarsIndexRoute: ExampleGuitarsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiDemoChatServerRoute: ApiDemoChatServerRoute,
  ApiInvestmentsServerRoute: ApiInvestmentsServerRoute,
  ApiItemsServerRoute: ApiItemsServerRoute,
  ApiMessagesServerRoute: ApiMessagesServerRoute,
  ApiSseServerRoute: ApiSseServerRoute,
  ApiTranscribeServerRoute: ApiTranscribeServerRoute,
  ApiTtsServerRoute: ApiTtsServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
